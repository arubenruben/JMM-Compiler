Overall1 {
	.construct Overall1().V{
		invokespecial(this,"<init>").V;
	}
	.method public static main(args.array.String).V {
		t1.array.i32 :=.array.i32 new(array, 10.i32).array.i32;
		list.array.i32 :=.array.i32 t1.array.i32;
		i.i32 :=.i32 0.i32;
		Loop11:
			t2.i32 :=.i32 arraylength(list.array.i32).i32;
			if(i.i32 <.i32 t2.i32) goto Body11;
		goto EndLoop11;
		Body11:
			t3.i32 :=.i32 list[i.i32].i32;
			list[i.i32].i32 :=.i32 i.i32;
			i.i32 :=.i32 i.i32 +.i32 1.i32;
			goto Loop11;
		EndLoop11:
		counter.i32 :=.i32 0.i32;
		i.i32 :=.i32 0.i32;
		Loop12:
			t5.i32 :=.i32 arraylength(list.array.i32).i32;
			if(i.i32 <.i32 t5.i32) goto Body12;
		goto EndLoop12;
		Body12:
			t6.i32 :=.i32 list[i.i32].i32;
			t7.i32 :=.i32 counter.i32 +.i32 t6.i32;
			counter.i32 :=.i32 t7.i32;
			i.i32 :=.i32 i.i32 +.i32 1.i32;
			goto Loop12;
		EndLoop12:
		if(counter.i32 >=.i32 100.i32) goto else18;
			invokestatic(io, "println", counter.i32).V;
			goto endif18;
		else18:
			invokestatic(io, "println", 0.i32).V;
		endif18:
		counter.i32 :=.i32 0.i32;
	}
}