Convertor {
	.construct Convertor().V{
		invokespecial(this,"<init>").V;
	}
	.method public metersToDecimeters_int(value.i32).i32 {
		t1.i32 :=.i32 $1.value.i32 *.i32 10.i32;
		ret.i32 t1.i32;
	}
	.method public metersToMillimeters_int(value.i32).i32 {
		t1.i32 :=.i32 $1.value.i32 *.i32 1000.i32;
		ret.i32 t1.i32;
	}
	.method public metersToCentimeters_int(value.i32).i32 {
		t1.i32 :=.i32 $1.value.i32 *.i32 100.i32;
		ret.i32 t1.i32;
	}
	.method public millimetersToMeters_int(value.i32).i32 {
		t1.i32 :=.i32 $1.value.i32 /.i32 1000.i32;
		ret.i32 t1.i32;
	}
	.method public millimetersToCentimeters_int(value.i32).i32 {
		t1.i32 :=.i32 $1.value.i32 /.i32 10.i32;
		ret.i32 t1.i32;
	}
	.method public static main(args.array.String).V {
		t1.Convertor :=.Convertor new(Convertor).Convertor;
		invokespecial(t1.Convertor, "<init>").V;
		convertor_aux.Convertor :=.Convertor t1.Convertor;
		t2.i32 :=.i32 invokevirtual(convertor_aux.Convertor, "metersToDecimeters_int", 1.i32).i32;
		invokestatic(io, "println", t2.i32).V;
		t3.i32 :=.i32 invokevirtual(convertor_aux.Convertor, "metersToCentimeters_int", 1.i32).i32;
		invokestatic(io, "println", t3.i32).V;
		t4.i32 :=.i32 invokevirtual(convertor_aux.Convertor, "metersToMillimeters_int", 1.i32).i32;
		invokestatic(io, "println", t4.i32).V;
		t5.i32 :=.i32 invokevirtual(convertor_aux.Convertor, "millimetersToCentimeters_int", 10.i32).i32;
		invokestatic(io, "println", t5.i32).V;
		t6.i32 :=.i32 invokevirtual(convertor_aux.Convertor, "millimetersToDecimeters_int", 100.i32).i32;
		invokestatic(io, "println", t6.i32).V;
		t7.i32 :=.i32 invokevirtual(convertor_aux.Convertor, "millimetersToMeters_int", 1000.i32).i32;
		invokestatic(io, "println", t7.i32).V;
	}
	.method public millimetersToDecimeters_int(value.i32).i32 {
		t1.i32 :=.i32 $1.value.i32 /.i32 100.i32;
		ret.i32 t1.i32;
	}
}