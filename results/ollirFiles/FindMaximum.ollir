FindMaximum {
	.field protected index.i32;
	.field protected test_arr.array.i32;
	.construct FindMaximum().V{
		invokespecial(this,"<init>").V;
	}
	.method public find_maximum_int_arr(arr.array.i32).i32 {
		i.i32 :=.i32 1.i32;
		t1.i32 :=.i32 getfield(this, index.i32).i32;
		t2.i32 :=.i32 $1.arr[t1.i32].i32;
		maximum.i32 :=.i32 t2.i32;
		Loop34:
			t3.i32 :=.i32 arraylength($1.arr.array.i32).i32;
			if(i.i32 <.i32 t3.i32) goto Body34;
		goto EndLoop34;
		Body34:
			t4.i32 :=.i32 $1.arr[i.i32].i32;
			value.i32 :=.i32 t4.i32;
			if(maximum.i32 >=.i32 value.i32) goto else55;
				maximum.i32 :=.i32 value.i32;
				goto endif55;
			else55:
			endif55:
			i.i32 :=.i32 i.i32 +.i32 1.i32;
			goto Loop34;
		EndLoop34:
		ret.i32 maximum.i32;
	}
	.method public build_test_arr().i32 {
		t1.array.i32 :=.array.i32 new(array, 5.i32).array.i32;
		putfield(this, test_arr.array.i32, t1.array.i32).V;
		t2.array.i32 :=.array.i32 getfield(this, test_arr.array.i32).array.i32;
		t3.i32 :=.i32 getfield(this, index.i32).i32;
		t4.i32 :=.i32 t2[t3.i32].i32;
		t2[t3.i32].i32 :=.i32 14.i32;
		t5.array.i32 :=.array.i32 getfield(this, test_arr.array.i32).array.i32;
		t6.i32 :=.i32 getfield(this, index.i32).i32;
		t7.i32 :=.i32 t5[t6.i32].i32;
		t5[t6.i32].i32 :=.i32 28.i32;
		t8.array.i32 :=.array.i32 getfield(this, test_arr.array.i32).array.i32;
		t9.i32 :=.i32 getfield(this, index.i32).i32;
		t10.i32 :=.i32 t8[t9.i32].i32;
		t8[t9.i32].i32 :=.i32 0.i32;
		t11.array.i32 :=.array.i32 getfield(this, test_arr.array.i32).array.i32;
		t12.i32 :=.i32 getfield(this, index.i32).i32;
		t13.i32 :=.i32 t11[t12.i32].i32;
		t14.i32 :=.i32 0.i32 -.i32 5.i32;
		t11[t12.i32].i32 :=.i32 t14.i32;
		t15.array.i32 :=.array.i32 getfield(this, test_arr.array.i32).array.i32;
		t16.i32 :=.i32 getfield(this, index.i32).i32;
		t17.i32 :=.i32 t15[t16.i32].i32;
		t15[t16.i32].i32 :=.i32 12.i32;
		ret.i32 0.i32;
	}
	.method public static main(args.array.String).V {
		t1.FindMaximum :=.FindMaximum new(FindMaximum).FindMaximum;
		invokespecial(t1.FindMaximum, "<init>").V;
		fm.FindMaximum :=.FindMaximum t1.FindMaximum;
		invokevirtual(fm.FindMaximum, "build_test_arr").i32;
		t2.array.i32 :=.array.i32 invokevirtual(fm.FindMaximum, "get_array").array.i32;
		t3.i32 :=.i32 invokevirtual(fm.FindMaximum, "find_maximum_int_arr", t2.array.i32).i32;
		max.i32 :=.i32 t3.i32;
		invokestatic(ioPlus, "printResult", max.i32).V;
	}
	.method public get_array().array.i32 {
		t1.array.i32 :=.array.i32 getfield(this, test_arr.array.i32).array.i32;
		ret.array.i32 t1.array.i32;
	}
}